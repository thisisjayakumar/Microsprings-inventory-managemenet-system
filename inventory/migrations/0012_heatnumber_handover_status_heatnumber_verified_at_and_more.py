# Generated by Django 5.2.6 on 2025-10-20 07:53

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0011_change_grm_quantity_fields_to_decimal'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='heatnumber',
            name='handover_status',
            field=models.CharField(choices=[('pending_handover', 'Pending Handover'), ('verified', 'Verified'), ('issue_reported', 'Issue Reported')], default='pending_handover', help_text='Status of handover verification to Coiling department', max_length=20),
        ),
        migrations.AddField(
            model_name='heatnumber',
            name='verified_at',
            field=models.DateTimeField(blank=True, help_text='When the handover was verified', null=True),
        ),
        migrations.AddField(
            model_name='heatnumber',
            name='verified_by',
            field=models.ForeignKey(blank=True, help_text='User who verified the handover', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_heat_numbers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='HandoverIssue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_type', models.CharField(choices=[('incorrect_weight', 'Incorrect Weight'), ('damaged_material', 'Damaged Material'), ('wrong_material', 'Wrong Material')], help_text='Type of issue reported', max_length=20)),
                ('actual_weight', models.DecimalField(blank=True, decimal_places=3, help_text='Actual weight found (if different from expected)', max_digits=10, null=True)),
                ('remarks', models.TextField(blank=True, help_text='Additional remarks about the issue')),
                ('reported_at', models.DateTimeField(auto_now_add=True)),
                ('is_resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True, help_text='Notes about how the issue was resolved')),
                ('heat_number', models.ForeignKey(help_text='Heat number for which issue was reported', on_delete=django.db.models.deletion.CASCADE, related_name='handover_issues', to='inventory.heatnumber')),
                ('reported_by', models.ForeignKey(help_text='User who reported the issue', on_delete=django.db.models.deletion.PROTECT, related_name='reported_handover_issues', to=settings.AUTH_USER_MODEL)),
                ('resolved_by', models.ForeignKey(blank=True, help_text='User who resolved the issue', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_handover_issues', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Handover Issue',
                'verbose_name_plural': 'Handover Issues',
                'ordering': ['-reported_at'],
                'indexes': [models.Index(fields=['heat_number'], name='inventory_h_heat_nu_40448c_idx'), models.Index(fields=['reported_at'], name='inventory_h_reporte_f4b087_idx'), models.Index(fields=['is_resolved'], name='inventory_h_is_reso_735905_idx')],
            },
        ),
    ]
