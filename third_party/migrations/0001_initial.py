# Generated by Django 5.2.6 on 2025-10-05 04:06

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Brand name', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text='Brand description or notes')),
                ('is_active', models.BooleanField(default=True, help_text='Is this brand currently active?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Brand',
                'verbose_name_plural': 'Brands',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_id', models.CharField(blank=True, editable=False, help_text='Auto-generated customer ID (C_001, C_002, etc.)', max_length=10, null=True, unique=True)),
                ('name', models.CharField(help_text='Customer company name', max_length=200, unique=True)),
                ('industry_type', models.CharField(choices=[('brake_industry', 'Brake Industry'), ('automotive', 'Automotive'), ('temperature_sensor', 'Temperature Sensor'), ('instruments', 'Instruments'), ('thermal_ceramics', 'Thermal Ceramics'), ('electric_loco_shed', 'Electric Loco Shed'), ('seating_system', 'Seating System'), ('harness', 'Harness'), ('technology_services', 'Technology & Services'), ('technology', 'Technology'), ('motor_electronics', 'Motor Electronics'), ('springs', 'Springs'), ('other', 'Other')], help_text='Type of industry the customer operates in', max_length=50)),
                ('gst_no', models.CharField(blank=True, help_text='15-digit GST number', max_length=15, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Enter a valid GST number (15 characters in format: 22AAAAA0000A1Z5)', regex='^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}Z[0-9A-Z]{1}$')])),
                ('address', models.TextField(help_text='Complete customer address')),
                ('point_of_contact', models.TextField(blank=True, help_text='Point of contact names and designations (as a single string)')),
                ('contact_no_1', models.CharField(blank=True, help_text='Primary contact number(s)', max_length=200)),
                ('contact_no_2', models.CharField(blank=True, help_text='Secondary contact number(s)', max_length=200)),
                ('email_id', models.EmailField(blank=True, help_text='Primary email address', max_length=254, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Is this customer currently active?')),
                ('notes', models.TextField(blank=True, help_text='Additional notes about the customer')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_customers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Vendor company name', max_length=200)),
                ('vendor_type', models.CharField(choices=[('rm_vendor', 'RM Vendor'), ('outsource_vendor', 'Outsource Vendor')], help_text='Type of vendor - Raw Material or Outsource', max_length=20)),
                ('products_process', models.TextField(blank=True, help_text='Products or processes offered by vendor')),
                ('service_type', models.CharField(blank=True, help_text='Type/category of service (e.g., COATING, PLATING, SHEET)', max_length=100)),
                ('gst_no', models.CharField(blank=True, help_text='15-digit GST number', max_length=15, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Enter a valid GST number (15 characters in format: 22AAAAA0000A1Z5)', regex='^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}Z[0-9A-Z]{1}$')])),
                ('address', models.TextField(blank=True, help_text='Complete vendor address')),
                ('contact_no', models.CharField(blank=True, help_text='Contact phone number', max_length=17, validators=[django.core.validators.RegexValidator(message='Enter a valid contact number (9-15 digits)', regex='^\\+?1?\\d{9,15}$')])),
                ('email', models.EmailField(blank=True, help_text='Vendor email address', max_length=254, null=True)),
                ('contact_person', models.CharField(blank=True, help_text='Primary contact person name', max_length=100)),
                ('is_active', models.BooleanField(default=True, help_text='Is this vendor currently active?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('brands', models.ManyToManyField(blank=True, help_text='Brands that this vendor works with or supplies', related_name='vendors', to='third_party.brand')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_vendors', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Vendor',
                'verbose_name_plural': 'Vendors',
                'ordering': ['name'],
            },
        ),
    ]
