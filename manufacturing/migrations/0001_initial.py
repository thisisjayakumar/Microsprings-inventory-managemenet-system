# Generated by Django 5.2.6 on 2025-10-04 04:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('inventory', '0001_initial'),
        ('processes', '0001_initial'),
        ('products', '0001_initial'),
        ('third_party', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ManufacturingOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mo_id', models.CharField(editable=False, max_length=20, unique=True)),
                ('date_time', models.DateTimeField(auto_now_add=True)),
                ('quantity', models.PositiveIntegerField(help_text='Quantity to manufacture')),
                ('product_type', models.CharField(blank=True, help_text='Auto-filled: Spring/Stamping Part', max_length=50)),
                ('material_name', models.CharField(blank=True, help_text='Auto-filled from product', max_length=100)),
                ('material_type', models.CharField(blank=True, help_text='Auto-filled: Coil/Sheet', max_length=20)),
                ('grade', models.CharField(blank=True, help_text='Auto-filled material grade', max_length=50)),
                ('wire_diameter_mm', models.DecimalField(blank=True, decimal_places=3, help_text='Auto-filled for coil materials', max_digits=8, null=True)),
                ('thickness_mm', models.DecimalField(blank=True, decimal_places=3, help_text='Auto-filled for sheet materials', max_digits=8, null=True)),
                ('finishing', models.CharField(blank=True, help_text='Material finishing details', max_length=100)),
                ('manufacturer_brand', models.CharField(blank=True, help_text='Material manufacturer', max_length=100)),
                ('weight_kg', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('loose_fg_stock', models.PositiveIntegerField(default=0, help_text='Available finished goods stock')),
                ('rm_required_kg', models.DecimalField(decimal_places=3, default=0, help_text='Raw material required in kg', max_digits=10)),
                ('shift', models.CharField(blank=True, choices=[('I', '9AM-5PM'), ('II', '5PM-2AM'), ('III', '2AM-9AM')], max_length=10, null=True)),
                ('planned_start_date', models.DateTimeField()),
                ('planned_end_date', models.DateTimeField()),
                ('actual_start_date', models.DateTimeField(blank=True, null=True)),
                ('actual_end_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('submitted', 'Submitted'), ('mo_approved', 'MO Approved'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('on_hold', 'On Hold')], default='on_hold', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('customer_name', models.CharField(blank=True, help_text='Customer name (auto-filled from customer)', max_length=200)),
                ('delivery_date', models.DateField(blank=True, null=True)),
                ('special_instructions', models.TextField(blank=True)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('gm_approved_at', models.DateTimeField(blank=True, null=True)),
                ('rm_allocated_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_supervisor', models.ForeignKey(blank=True, help_text='Supervisor allocates operator (assigned later)', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='supervised_mo_orders', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_mo_orders', to=settings.AUTH_USER_MODEL)),
                ('customer_c_id', models.ForeignKey(blank=True, help_text='Customer for this manufacturing order (references c_id)', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='manufacturing_orders', to='third_party.customer', to_field='c_id')),
                ('gm_approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gm_approved_mo_orders', to=settings.AUTH_USER_MODEL)),
                ('product_code', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='manufacturing_orders', to='products.product')),
                ('rm_allocated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rm_allocated_mo_orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Manufacturing Order',
                'verbose_name_plural': 'Manufacturing Orders',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MOProcessExecution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('on_hold', 'On Hold'), ('failed', 'Failed'), ('skipped', 'Skipped')], default='pending', max_length=20)),
                ('sequence_order', models.IntegerField(help_text='Order of execution for this MO')),
                ('planned_start_time', models.DateTimeField(blank=True, null=True)),
                ('planned_end_time', models.DateTimeField(blank=True, null=True)),
                ('actual_start_time', models.DateTimeField(blank=True, null=True)),
                ('actual_end_time', models.DateTimeField(blank=True, null=True)),
                ('progress_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_operator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_process_executions', to=settings.AUTH_USER_MODEL)),
                ('mo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='process_executions', to='manufacturing.manufacturingorder')),
                ('process', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='processes.process')),
            ],
            options={
                'ordering': ['mo', 'sequence_order'],
                'unique_together': {('mo', 'process')},
            },
        ),
        migrations.CreateModel(
            name='MOProcessStepExecution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('failed', 'Failed'), ('skipped', 'Skipped')], default='pending', max_length=20)),
                ('quality_status', models.CharField(choices=[('pending', 'Pending'), ('passed', 'Passed'), ('failed', 'Failed'), ('rework_required', 'Rework Required')], default='pending', max_length=20)),
                ('actual_start_time', models.DateTimeField(blank=True, null=True)),
                ('actual_end_time', models.DateTimeField(blank=True, null=True)),
                ('quantity_processed', models.PositiveIntegerField(default=0)),
                ('quantity_passed', models.PositiveIntegerField(default=0)),
                ('quantity_failed', models.PositiveIntegerField(default=0)),
                ('scrap_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('operator_notes', models.TextField(blank=True)),
                ('quality_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('operator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='operated_step_executions', to=settings.AUTH_USER_MODEL)),
                ('process_execution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='step_executions', to='manufacturing.moprocessexecution')),
                ('process_step', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='processes.processstep')),
            ],
            options={
                'ordering': ['process_execution', 'process_step__sequence_order'],
                'unique_together': {('process_execution', 'process_step')},
            },
        ),
        migrations.CreateModel(
            name='MOProcessAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('delay', 'Process Delay'), ('quality_issue', 'Quality Issue'), ('equipment_failure', 'Equipment Failure'), ('material_shortage', 'Material Shortage'), ('operator_issue', 'Operator Issue'), ('custom', 'Custom Alert')], max_length=20)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('is_resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_alerts', to=settings.AUTH_USER_MODEL)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_alerts', to=settings.AUTH_USER_MODEL)),
                ('process_execution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='manufacturing.moprocessexecution')),
                ('step_execution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='manufacturing.moprocessstepexecution')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MOStatusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_status', models.CharField(blank=True, max_length=20)),
                ('to_status', models.CharField(max_length=20)),
                ('changed_at', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('changed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('mo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='manufacturing.manufacturingorder')),
            ],
            options={
                'verbose_name': 'MO Status History',
                'verbose_name_plural': 'MO Status Histories',
                'ordering': ['-changed_at'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('po_id', models.CharField(editable=False, max_length=20, unique=True)),
                ('date_time', models.DateTimeField(auto_now_add=True)),
                ('material_type', models.CharField(blank=True, choices=[('coil', 'Coil'), ('sheet', 'Sheet')], max_length=20)),
                ('material_auto', models.CharField(blank=True, help_text='Auto-filled', max_length=100)),
                ('grade_auto', models.CharField(blank=True, help_text='Auto-filled', max_length=50)),
                ('wire_diameter_mm_auto', models.DecimalField(blank=True, decimal_places=3, help_text='Auto-filled for coil', max_digits=8, null=True)),
                ('finishing_auto', models.CharField(blank=True, help_text='Auto-filled finishing', max_length=100)),
                ('manufacturer_brand_auto', models.CharField(blank=True, help_text='Auto-filled manufacturer', max_length=100)),
                ('kg_auto', models.DecimalField(blank=True, decimal_places=3, help_text='Auto-filled weight', max_digits=10, null=True)),
                ('thickness_mm_auto', models.DecimalField(blank=True, decimal_places=3, help_text='Auto-filled for sheet', max_digits=8, null=True)),
                ('sheet_roll_auto', models.CharField(blank=True, help_text='Auto-filled sheet/roll info', max_length=50)),
                ('qty_sheets_auto', models.PositiveIntegerField(blank=True, help_text='Auto-filled number of sheets', null=True)),
                ('vendor_address_auto', models.TextField(blank=True, help_text='Auto-filled from vendor')),
                ('gst_no_auto', models.CharField(blank=True, help_text='Auto-filled from vendor', max_length=15)),
                ('mob_no_auto', models.CharField(blank=True, help_text='Auto-filled from vendor', max_length=17)),
                ('expected_date', models.DateField(help_text='Expected delivery date')),
                ('quantity_ordered', models.PositiveIntegerField(help_text='Quantity to order')),
                ('unit_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('gm_approved', 'GM Approved'), ('gm_created_po', 'GM Created PO'), ('vendor_confirmed', 'Vendor Confirmed'), ('partially_received', 'Partially Received'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('rejected', 'Rejected')], default='draft', max_length=20)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('gm_approved_at', models.DateTimeField(blank=True, null=True)),
                ('po_created_at', models.DateTimeField(blank=True, null=True)),
                ('rejected_at', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True)),
                ('terms_conditions', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_po_orders', to=settings.AUTH_USER_MODEL)),
                ('gm_approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gm_approved_po_orders', to=settings.AUTH_USER_MODEL)),
                ('po_created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='po_created_orders', to=settings.AUTH_USER_MODEL)),
                ('rejected_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rejected_po_orders', to=settings.AUTH_USER_MODEL)),
                ('rm_code', models.ForeignKey(help_text='Select from dropdown - auto fills other details', on_delete=django.db.models.deletion.PROTECT, related_name='purchase_orders', to='inventory.rawmaterial')),
                ('vendor_name', models.ForeignKey(help_text='Only show vendors who have this material', on_delete=django.db.models.deletion.PROTECT, related_name='purchase_orders', to='third_party.vendor')),
            ],
            options={
                'verbose_name': 'Purchase Order',
                'verbose_name_plural': 'Purchase Orders',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='POStatusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_status', models.CharField(blank=True, max_length=20)),
                ('to_status', models.CharField(max_length=20)),
                ('changed_at', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('changed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('po', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='manufacturing.purchaseorder')),
            ],
            options={
                'verbose_name': 'PO Status History',
                'verbose_name_plural': 'PO Status Histories',
                'ordering': ['-changed_at'],
            },
        ),
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_id', models.CharField(editable=False, max_length=30, unique=True)),
                ('planned_quantity', models.PositiveIntegerField(help_text='Planned quantity for this batch')),
                ('actual_quantity_started', models.PositiveIntegerField(default=0, help_text='Actual quantity that started production')),
                ('actual_quantity_completed', models.PositiveIntegerField(default=0, help_text='Actual quantity completed successfully')),
                ('scrap_quantity', models.PositiveIntegerField(default=0, help_text='Quantity scrapped during production')),
                ('planned_start_date', models.DateTimeField(blank=True, help_text='Planned start date for this batch', null=True)),
                ('planned_end_date', models.DateTimeField(blank=True, help_text='Planned completion date for this batch', null=True)),
                ('actual_start_date', models.DateTimeField(blank=True, help_text='Actual start date', null=True)),
                ('actual_end_date', models.DateTimeField(blank=True, help_text='Actual completion date', null=True)),
                ('status', models.CharField(choices=[('created', 'Created'), ('rm_allocated', 'Raw Material Allocated'), ('in_process', 'In Process'), ('quality_check', 'Quality Check'), ('completed', 'Completed'), ('packed', 'Packed'), ('dispatched', 'Dispatched'), ('cancelled', 'Cancelled')], default='created', max_length=20)),
                ('progress_percentage', models.DecimalField(decimal_places=2, default=0, help_text='Overall completion percentage', max_digits=5)),
                ('total_processing_time_minutes', models.PositiveIntegerField(default=0, help_text='Total time spent in processing')),
                ('notes', models.TextField(blank=True, help_text='Any special notes or instructions for this batch')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_operator', models.ForeignKey(blank=True, help_text='Primary operator assigned to this batch', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_batches', to=settings.AUTH_USER_MODEL)),
                ('assigned_supervisor', models.ForeignKey(blank=True, help_text='Supervisor overseeing this batch', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supervised_batches', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_batches', to=settings.AUTH_USER_MODEL)),
                ('current_process_step', models.ForeignKey(blank=True, help_text='Current process step being executed', null=True, on_delete=django.db.models.deletion.SET_NULL, to='processes.processstep')),
                ('product_code', models.ForeignKey(help_text='Product being manufactured in this batch (should match MO product)', on_delete=django.db.models.deletion.PROTECT, related_name='batches', to='products.product')),
                ('mo', models.ForeignKey(help_text='Parent Manufacturing Order', on_delete=django.db.models.deletion.CASCADE, related_name='batches', to='manufacturing.manufacturingorder')),
            ],
            options={
                'verbose_name': 'Production Batch',
                'verbose_name_plural': 'Production Batches',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['mo', 'status'], name='manufacturi_mo_id_0b5851_idx'), models.Index(fields=['product_code', 'status'], name='manufacturi_product_269351_idx'), models.Index(fields=['batch_id'], name='manufacturi_batch_i_a27c18_idx')],
            },
        ),
    ]
