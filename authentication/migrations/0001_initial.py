# Generated by Django 5.2.6 on 2025-09-20 13:56

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('admin', 'Admin'), ('manager', 'Manager'), ('supervisor', 'Supervisor'), ('store_manager', 'Store Manager'), ('operator', 'Operator')], max_length=50, unique=True)),
                ('description', models.TextField()),
                ('hierarchy_level', models.IntegerField(default=5, help_text='Lower number = higher authority')),
                ('permissions', models.JSONField(default=dict)),
                ('restricted_departments', models.JSONField(default=list, help_text='Departments this role can access')),
            ],
            options={
                'verbose_name': 'Role',
                'verbose_name_plural': 'Roles',
                'ordering': ['hierarchy_level'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'auth_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='LoginSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('login_time', models.DateTimeField(auto_now_add=True)),
                ('logout_time', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='login_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Login Session',
                'verbose_name_plural': 'Login Sessions',
                'ordering': ['-login_time'],
            },
        ),
        migrations.CreateModel(
            name='OperatorEngagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_id', models.CharField(blank=True, max_length=20, null=True)),
                ('process_step', models.CharField(blank=True, max_length=100, null=True)),
                ('machine_id', models.CharField(blank=True, max_length=20, null=True)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('estimated_end_time', models.DateTimeField(blank=True, null=True)),
                ('operator', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='current_engagement', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Operator Engagement',
                'verbose_name_plural': 'Operator Engagements',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(max_length=20, unique=True)),
                ('designation', models.CharField(max_length=100)),
                ('department', models.CharField(choices=[('rm_store', 'RM Store'), ('coiling', 'Coiling'), ('tempering', 'Tempering'), ('plating', 'Plating'), ('packing', 'Packing'), ('fg_store', 'FG Store'), ('quality', 'Quality Control'), ('maintenance', 'Maintenance'), ('admin', 'Administration')], max_length=20)),
                ('shift', models.CharField(blank=True, choices=[('I', '9AM-5PM (Shift I)'), ('II', '5PM-2AM (Shift II)'), ('III', '2AM-9AM (Shift III)')], max_length=10, null=True)),
                ('date_of_joining', models.DateField()),
                ('phone_number', models.CharField(max_length=15)),
                ('is_active', models.BooleanField(default=True)),
                ('is_engaged', models.BooleanField(default=False, help_text='Currently assigned to a process')),
                ('allowed_ip_ranges', models.JSONField(default=list, help_text='Allowed IP ranges for network restriction')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
            },
        ),
        migrations.CreateModel(
            name='ProcessSupervisor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('process_names', models.JSONField(default=list, help_text='List of process names this supervisor handles')),
                ('department', models.CharField(choices=[('rm_store', 'RM Store'), ('coiling', 'Coiling'), ('tempering', 'Tempering'), ('plating', 'Plating'), ('packing', 'Packing'), ('fg_store', 'FG Store'), ('quality', 'Quality Control'), ('maintenance', 'Maintenance'), ('admin', 'Administration')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('supervisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='process_supervisor_assignments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Process Supervisor',
                'verbose_name_plural': 'Process Supervisors',
                'unique_together': {('supervisor', 'department')},
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('assigned_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='roles_assigned', to=settings.AUTH_USER_MODEL)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role_users', to='authentication.role')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_roles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Role',
                'verbose_name_plural': 'User Roles',
                'unique_together': {('user', 'role')},
            },
        ),
    ]
