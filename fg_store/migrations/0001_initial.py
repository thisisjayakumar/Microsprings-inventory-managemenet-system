# Generated by Django 5.2.6 on 2025-10-19 12:29

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('manufacturing', '0016_add_outsourcing_models'),
        ('products', '0004_update_sheet_calculation_fields'),
        ('third_party', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DispatchBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_id', models.CharField(editable=False, max_length=30, unique=True)),
                ('quantity_produced', models.PositiveIntegerField(help_text='Total quantity produced in this batch')),
                ('quantity_packed', models.PositiveIntegerField(default=0, help_text='Quantity packed and ready for dispatch')),
                ('quantity_dispatched', models.PositiveIntegerField(default=0, help_text='Quantity already dispatched')),
                ('loose_stock', models.PositiveIntegerField(default=0, help_text='Individual loose items (not in packs)')),
                ('status', models.CharField(choices=[('pending_dispatch', 'Pending Dispatch'), ('partially_dispatched', 'Partially Dispatched'), ('fully_dispatched', 'Fully Dispatched'), ('cancelled', 'Cancelled')], default='pending_dispatch', max_length=20)),
                ('location_in_store', models.CharField(blank=True, help_text='Physical location in FG store', max_length=100)),
                ('packing_date', models.DateTimeField(blank=True, help_text='Date when batch was packed', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_dispatch_batches', to=settings.AUTH_USER_MODEL)),
                ('mo', models.ForeignKey(help_text='Parent Manufacturing Order', on_delete=django.db.models.deletion.CASCADE, related_name='dispatch_batches', to='manufacturing.manufacturingorder')),
                ('packing_supervisor', models.ForeignKey(blank=True, help_text='Supervisor who packed this batch', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='packed_batches', to=settings.AUTH_USER_MODEL)),
                ('product_code', models.ForeignKey(help_text='Product being dispatched', on_delete=django.db.models.deletion.PROTECT, related_name='dispatch_batches', to='products.product')),
                ('production_batch', models.ForeignKey(help_text='Production batch this dispatch batch is based on', on_delete=django.db.models.deletion.CASCADE, related_name='dispatch_batch', to='manufacturing.batch')),
            ],
            options={
                'verbose_name': 'Dispatch Batch',
                'verbose_name_plural': 'Dispatch Batches',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DispatchOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(editable=False, max_length=30, unique=True)),
                ('total_quantity_ordered', models.PositiveIntegerField(help_text='Total quantity ordered in MO')),
                ('total_quantity_dispatched', models.PositiveIntegerField(default=0, help_text='Total quantity dispatched so far')),
                ('dispatch_date', models.DateTimeField(blank=True, help_text='Planned dispatch date', null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending_confirmation', 'Pending Confirmation'), ('confirmed', 'Confirmed'), ('partially_dispatched', 'Partially Dispatched'), ('fully_dispatched', 'Fully Dispatched'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('special_instructions', models.TextField(blank=True, help_text='Special instructions for dispatch')),
                ('delivery_address', models.TextField(blank=True, help_text='Delivery address (if different from customer default)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_dispatch_orders', to=settings.AUTH_USER_MODEL)),
                ('customer_c_id', models.ForeignKey(help_text='Customer for this dispatch', on_delete=django.db.models.deletion.PROTECT, related_name='dispatch_orders', to='third_party.customer', to_field='c_id')),
                ('mo', models.ForeignKey(help_text='Manufacturing Order for this dispatch', on_delete=django.db.models.deletion.PROTECT, related_name='fg_dispatch_orders', to='manufacturing.manufacturingorder')),
            ],
            options={
                'verbose_name': 'Dispatch Order',
                'verbose_name_plural': 'Dispatch Orders',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DispatchTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(editable=False, max_length=30, unique=True)),
                ('quantity_dispatched', models.PositiveIntegerField(help_text='Quantity dispatched in this transaction')),
                ('dispatch_date', models.DateTimeField(auto_now_add=True, help_text='Date and time of dispatch')),
                ('status', models.CharField(choices=[('pending_confirmation', 'Pending Confirmation'), ('confirmed', 'Confirmed'), ('received', 'Received by Customer'), ('cancelled', 'Cancelled')], default='pending_confirmation', max_length=20)),
                ('notes', models.TextField(blank=True, help_text='Additional notes or special instructions')),
                ('delivery_reference', models.CharField(blank=True, help_text='Delivery reference number or tracking ID', max_length=100)),
                ('confirmed_at', models.DateTimeField(blank=True, help_text='When dispatch was confirmed', null=True)),
                ('received_at', models.DateTimeField(blank=True, help_text='When customer received the dispatch', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_dispatch_transactions', to=settings.AUTH_USER_MODEL)),
                ('customer_c_id', models.ForeignKey(help_text='Customer receiving the dispatch', on_delete=django.db.models.deletion.PROTECT, related_name='dispatch_transactions', to='third_party.customer', to_field='c_id')),
                ('dispatch_batch', models.ForeignKey(help_text='Dispatch batch being dispatched', on_delete=django.db.models.deletion.PROTECT, related_name='dispatch_transactions', to='fg_store.dispatchbatch')),
                ('mo', models.ForeignKey(help_text='Manufacturing Order being dispatched', on_delete=django.db.models.deletion.PROTECT, related_name='dispatch_transactions', to='manufacturing.manufacturingorder')),
                ('supervisor_id', models.ForeignKey(help_text='Supervisor who confirmed the dispatch', on_delete=django.db.models.deletion.PROTECT, related_name='supervised_dispatches', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Dispatch Transaction',
                'verbose_name_plural': 'Dispatch Transactions',
                'ordering': ['-dispatch_date'],
            },
        ),
        migrations.CreateModel(
            name='FGStockAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('low_stock', 'Low Stock'), ('expiring', 'Expiring Batch'), ('overstock', 'Overstock'), ('custom', 'Custom Alert')], help_text='Type of alert', max_length=20)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('min_stock_level', models.PositiveIntegerField(blank=True, help_text='Minimum stock level threshold', null=True)),
                ('max_stock_level', models.PositiveIntegerField(blank=True, help_text='Maximum stock level threshold', null=True)),
                ('expiry_days_threshold', models.PositiveIntegerField(blank=True, help_text='Days before expiry to trigger alert', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Is this alert rule active')),
                ('last_triggered', models.DateTimeField(blank=True, help_text='When this alert was last triggered', null=True)),
                ('last_alerted', models.DateTimeField(blank=True, help_text='When notification was last sent', null=True)),
                ('description', models.TextField(blank=True, help_text='Description of this alert rule')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_stock_alerts', to=settings.AUTH_USER_MODEL)),
                ('product_code', models.ForeignKey(help_text='Product for this alert', on_delete=django.db.models.deletion.CASCADE, related_name='stock_alerts', to='products.product')),
            ],
            options={
                'verbose_name': 'FG Stock Alert',
                'verbose_name_plural': 'FG Stock Alerts',
                'ordering': ['product_code', 'alert_type'],
            },
        ),
        migrations.AddIndex(
            model_name='dispatchbatch',
            index=models.Index(fields=['mo', 'status'], name='fg_store_di_mo_id_c558d5_idx'),
        ),
        migrations.AddIndex(
            model_name='dispatchbatch',
            index=models.Index(fields=['product_code', 'status'], name='fg_store_di_product_c38497_idx'),
        ),
        migrations.AddIndex(
            model_name='dispatchbatch',
            index=models.Index(fields=['batch_id'], name='fg_store_di_batch_i_2bb929_idx'),
        ),
        migrations.AddIndex(
            model_name='dispatchbatch',
            index=models.Index(fields=['status'], name='fg_store_di_status_fdca1c_idx'),
        ),
        migrations.AddIndex(
            model_name='dispatchorder',
            index=models.Index(fields=['mo', 'status'], name='fg_store_di_mo_id_d0df4d_idx'),
        ),
        migrations.AddIndex(
            model_name='dispatchorder',
            index=models.Index(fields=['customer_c_id', 'dispatch_date'], name='fg_store_di_custome_299416_idx'),
        ),
        migrations.AddIndex(
            model_name='dispatchorder',
            index=models.Index(fields=['order_id'], name='fg_store_di_order_i_d97162_idx'),
        ),
        migrations.AddIndex(
            model_name='dispatchtransaction',
            index=models.Index(fields=['mo', 'status'], name='fg_store_di_mo_id_eb40c6_idx'),
        ),
        migrations.AddIndex(
            model_name='dispatchtransaction',
            index=models.Index(fields=['dispatch_batch', 'status'], name='fg_store_di_dispatc_d58734_idx'),
        ),
        migrations.AddIndex(
            model_name='dispatchtransaction',
            index=models.Index(fields=['customer_c_id', 'dispatch_date'], name='fg_store_di_custome_63a484_idx'),
        ),
        migrations.AddIndex(
            model_name='dispatchtransaction',
            index=models.Index(fields=['supervisor_id', 'dispatch_date'], name='fg_store_di_supervi_32d7ff_idx'),
        ),
        migrations.AddIndex(
            model_name='dispatchtransaction',
            index=models.Index(fields=['transaction_id'], name='fg_store_di_transac_19984e_idx'),
        ),
        migrations.AddIndex(
            model_name='dispatchtransaction',
            index=models.Index(fields=['dispatch_date'], name='fg_store_di_dispatc_7ab3e5_idx'),
        ),
        migrations.AddIndex(
            model_name='fgstockalert',
            index=models.Index(fields=['product_code', 'is_active'], name='fg_store_fg_product_c6d6b4_idx'),
        ),
        migrations.AddIndex(
            model_name='fgstockalert',
            index=models.Index(fields=['alert_type', 'is_active'], name='fg_store_fg_alert_t_16a8ea_idx'),
        ),
    ]
